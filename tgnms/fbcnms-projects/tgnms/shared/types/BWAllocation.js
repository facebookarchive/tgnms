/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
// @flow strict-local

// Generated by thrift2flow at Thu Feb 21 2019 13:01:24 GMT-0800 (PST)
/* eslint-disable */

export type LinkIdType = number;

export type SlotIdxType = number;

export type SlotAttribType = "UNRSVD_SLOT" | "BF_RSVD_SLOT" | "MGMT_RSVD_SLOT";
export const SlotAttribValueMap = {
  UNRSVD_SLOT: 0,
  BF_RSVD_SLOT: 1,
  MGMT_RSVD_SLOT: 2
};

export type SlotInfoType = {| id: LinkIdType, attrib: SlotAttribType |};

export type NodeBwAllocType = {|
  frmCfgType: number,
  sframesPerBWGD: number,
  slotsPerFrame: number,
  macAddrList: { [LinkIdType]: string },
  txSlotMap: { [SlotIdxType]: SlotInfoType },
  rxSlotMap: { [SlotIdxType]: SlotInfoType }
|};

export type NetworkBwAllocType = {|
  nodeBwAllocMap: { [string]: NodeBwAllocType }
|};

export type LinkAirtimeType = {|
  macAddress: string,
  txIdeal: number,
  txMin: number,
  txMax: number,
  rxIdeal: number,
  rxMin: number,
  rxMax: number
|};

export type NodeAirtimeType = {| linkAirtimes: LinkAirtimeType[] |};

export type NetworkAirtimeType = {|
  nodeAirtimeMap: { [string]: NodeAirtimeType }
|};

export type AirtimeConfigType = {
  txIdeal: number, // Ideal TX airtime fraction to link. Unit: 1/100%.
  txMin: number, // Min TX airtime fraction to link. Unit: 1/100%.
  txMax: number, // Max TX airtime fraction to link. Unit: 1/100%.
  rxIdeal: number, // Ideal RX airtime fraction from link. Unit: 1/100%.
  rxMin: number, // Min RX airtime fraction from link. Unit: 1/100%.
  rxMax: number, // Max RX airtime fraction from link. Unit: 1/100%.
};

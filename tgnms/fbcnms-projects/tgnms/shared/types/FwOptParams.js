/**
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
// @flow strict-local

// Generated by thrift2flow at Thu Feb 21 2019 13:01:24 GMT-0800 (PST)
/* eslint-disable */

export type FwOptParamsType = {
  antCodeBook?: number,
  numOfPeerSta?: number,
  gpioConfig?: number,
  mcs?: number,
  txPower?: number,
  rxBuffer?: number,
  beamConfig?: number,
  txBeamIndex?: number,
  rxBeamIndex?: number,
  numOfHbLossToFail?: number,
  statsLogInterval?: number,
  statsPrintInterval?: number,
  forceGpsDisable?: number,
  lsmAssocRespTimeout?: number,
  lsmSendAssocReqRetry?: number,
  lsmAssocRespAckTimeout?: number,
  lsmSendAssocRespRetry?: number,
  lsmRepeatAckInterval?: number,
  lsmRepeatAck?: number,
  lsmFirstHeartbTimeout?: number,
  txSlot0Start?: number,
  txSlot0End?: number,
  txSlot1Start?: number,
  txSlot1End?: number,
  txSlot2Start?: number,
  txSlot2End?: number,
  rxSlot0Start?: number,
  rxSlot0End?: number,
  rxSlot1Start?: number,
  rxSlot1End?: number,
  rxSlot2Start?: number,
  rxSlot2End?: number,
  linkAgc?: number,
  respNodeType?: number,
  txGolayIdx?: number,
  rxGolayIdx?: number,
  bfAgc?: number,
  tpcEnable?: number,
  tpcRefRssi?: number,
  tpcRefStfSnrStep1?: number,
  tpcRefStfSnrStep2?: number,
  tpcDelPowerStep1?: number,
  tpcDelPowerStep2?: number,
  bfMode?: number,
  bwHandlerMode?: number,
  tpcRefStfSnrStep3?: number,
  tpcDelPowerStep3?: number,
  minTxPower?: number,
  tpcAlphaDownRssiStep3Q10?: number,
  tpcAlphaUpRssiStep3Q10?: number,
  laInvPERTarget?: number,
  laConvergenceFactordBperSFQ8?: number,
  laMaxMcs?: number,
  laMinMcs?: number,
  maxAgcTrackingMargindB?: number,
  maxAgcTrackingEnabled?: number,
  noLinkTimeout?: number,
  wsecEnable?: number,
  key0?: number,
  key1?: number,
  key2?: number,
  key3?: number,
  controlSuperframe?: number,
  tpcAlphaUpTargetRssiStep3Q10?: number,
  crsScale?: number,
  tpcAlphaDownTargetRssiStep3Q10?: number,
  tpcHysteresisdBStep3Q2?: number,
  measSlotEnable?: number,
  measSlotPeriod?: number,
  measSlotOffset?: number,
  latpcUseIterations?: number,
  maxTxPower?: number,
  polarity?: number,
  linkImpairmentDetectionEnable?: number,
  linkImpairmentShortPending?: number,
  linkImpairmentShortUp?: number,
  linkImpairmentLongPending?: number,
  maxTxPowerPerMcs?: number,
  topoScanEnable?: number,
  restrictToSfParity?: number,
  maxAgcIfGaindBperIndexQ8?: number,
  maxAgcMaxRfGainIndex?: number,
  maxAgcMinRfGainIndex?: number,
  maxAgcMaxIfGainIndex?: number,
  maxAgcMinIfGainIndex?: number,
  maxAgcMaxIfSweetGainRange?: number,
  maxAgcMinIfSweetGainRange?: number,
  maxAgcMinRssi?: number,
  maxAgcRawAdcScaleFactorQ8?: number,
  maxAgcRfGaindBperIndexQ8?: number,
  maxAgcTargetRawAdc?: number,
  maxAgcUseMinRssi?: number,
  maxAgcUseSameForAllSta?: number,
  maxAgcRfGainHiLo?: number,
  cb2Enable?: number,
  maxTxPowerPerMcsEdmg?: number,
  noTrafficMaxMcsFallback?: number,
  txPowerTableLinear?: number,
  autoPbfEnable?: number,
  channel?: number,
  ibfProcedureType?: number,
  ibfNumberOfBeams?: number,
  latpcLinkImpairConfig?: number,
  latpc100PercentPERDrop?: number,
  ibfPass1RficBitmap?: number,
  ibfPass2RficBitmap?: number,
};

export type NodeFwParamsType = {|
  nodeInitOptParams: FwOptParamsType,
  linkOptParams: FwOptParamsType,
|};
